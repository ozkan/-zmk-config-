/*
 * Copyright (c) 2023 ozkan (github.com/ozkan)
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


// Layers
#define _COLEMAK       0
#define _LOWER         1
#define _RAISE         2
#define _SPACE_RIGHT   3
#define _SPACE_LEFT    4
#define _NAVIGATION    5
#define _ADJUST        6

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space
&lt {
  quick_tap_ms = <200>;
};

&left_encoder {
     resolution = <4>; 
};
&right_encoder {
     resolution = <4>; 
};


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>; //lower and raise
            then-layer = <6>;  // adjust
        };
    };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        en_i: en_i {
            compatible = "zmk,behavior-mod-morph";
            label = "EN_I";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp LS(I)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        tr_i: tr_i {
            compatible = "zmk,behavior-mod-morph";
            label = "TR_I";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp LS(SQT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rgb_encoder_right: rgb_encoder_right {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_RIGHT";
            #sensor-binding-cells = <0>;
            bindings =  <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
        rgb_encoder_left: rgb_encoder_left {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_LEFT";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
       // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
       // │  ESC │  Q   │  W   │  F   │  P   │  G   │                          │  J   │  L   │  U   │  Y   │   ;  │ BSPC │
       // ├──────┼──────┼──────┼──────┼──────┼──────┤         (ENCODERS)       ├──────┼──────┼──────┼──────┼──────┼──────┤
       // │ CTRL │  A   │  R   │  S   │NAV T │  D   │   ╭────────╮╭────────╮   │  H   │  N   │  E   │  I   │  O   │   '  │
       // ├──────┼──────┼──────┼──────┼──────┼──────┤   │  PAUSE ││  PAUSE │   ├──────┼──────┼──────┼──────┼──────┼──────┤
       // │SFT_CL│ALT Z │CTL X │SFT C │  V   │  B   │   ╰────────╯╰────────╯   │  K   │  M   │SFT , │CTL . │ALT / │ ENT  │
       // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
       //                      │  ALT │LOWER │ SPACE  │                      │ SPACE  │RAISE │ WIN  │
       //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯            
            label = "Colemak";
            bindings = <
                &kp ESC        &kp Q      &kp W       &kp F       &kp P              &kp G                           &kp J &kp L  &kp U                 &kp Y          &kp LS(NON_US_HASH) &kp BSPC
                &kp LCTRL      &kp A      &kp R       &kp S       &lt _NAVIGATION T  &kp D                           &kp H &kp N  &kp E                 &en_i        &kp O               &kp LS(N2)
                &ht LSHFT CLCK &ht LALT Z &ht LCTRL X &ht LSHFT C &kp V              &kp B                           &kp K &kp M  &ht RSHFT NON_US_HASH &ht RCTRL FSLH &ht LALT RS(N7)     &ht RSHFT RET
                                    &kp LALT  &lt _LOWER TAB    &lt _SPACE_LEFT SPACE         &kp C_PLAY_PAUSE  &kp C_MUTE       &lt _SPACE_RIGHT SPACE          &mo _RAISE     &kp RIGHT_GUI
            >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
        // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
        // │ ESC  │      │      │      │      │      │                          │  (   │  )   │  =   │  &   │  |   │ DEL  │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤                          ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │      │      │   ╭────────╮╭────────╮   │  {   │  }   │  _   │  $   │  #   │   "  │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤   │  PREV  ││  NEXT  │   ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │      │      │   ╰────────╯╰────────╯   │  [   │  ]   │  <   │  >   │  \   │ ENT  │
        // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
        //                      │  ALT │LOWER │ SPACE  │                      │  ENTER │RAISE │ WIN  │
        //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯    
            label = "Lower";        
            bindings = <
                &kp ESC  &trans  &trans   &trans        &trans          &trans                        &kp RS(N8)  &kp RS(N9)      &kp RS(N0)        &kp RS(N6)           &kp RA(EQUAL)  &trans
                &trans   &trans  &trans   &trans        &trans          &trans                        &kp RA(N7)  &kp RA(N0)      &kp PLUS          &kp RA(N4)           &kp RA(N3)     &kp GRAVE
                &trans   &trans  &trans   &trans        &trans          &trans                        &kp RA(N8)  &kp RA(N9)      &kp NON_US_BSLH   &kp RS(NON_US_BSLH)  &kp RA(MINUS)  &trans
                                 &kp LALT  &lt _LOWER TAB    &lt _SPACE_LEFT SPACE         &kp C_PREV   &kp C_NEXT          &kp RET      &mo _RAISE     &kp RIGHT_GUI
            >;
            
        };
        
        raise_layer {
        // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
        // │ ESC  │  /   │  1   │  2   │  3   │  -   │                          │  F1  │  F2  │  F3  │  F4  │      │      │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤                          ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │  *   │  4   │  5   │  6   │  +   │   ╭────────╮╭────────╮   │  F5  │  F6  │  F7  │  F8  │      │      │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤   │  PAUSE ││  PAUSE │   ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │  %   │  7   │  8   │  9   │  0   │   ╰────────╯╰────────╯   │  F9  │  F10 │ F11  │  F1  │      │      │
        // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
        //                      │  ALT │LOWER │ SPACE  │                      │ SPACE  │RAISE │ WIN  │
        //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯   
            label = "Raise";         
            bindings = <
                &kp ESC      &kp AMPS    &kp N1    &kp N2        &kp N3         &kp KP_MINUS                      &kp F1  &kp F2                  &kp F3            &kp F4       &trans   &kp DEL
                &trans       &kp MINUS   &kp N4    &kp N5        &kp N6         &kp KP_PLUS                       &kp F5  &kp F6                  &kp F7            &kp F8       &trans   &trans
                &caps_word   &kp PRCNT   &kp N7    &kp N8        &kp N9         &kp N0                            &kp F9  &kp F10                 &kp F11           &kp F12      &trans   &trans
                                         &kp LALT  &lt _LOWER TAB    &lt _SPACE_LEFT SPACE         &kp C_PLAY_PAUSE  &kp C_MUTE       &lt _SPACE_RIGHT SPACE          &mo _RAISE     &kp RIGHT_GUI
            >;

        };

        space_right_layer {
        // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
        // │ ESC  │      │      │  €   │  £   │  Ğ   │                          │C_PREV│ PGUP │  UP  │      │      │      │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤                          ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │  !   │  @   │  Ş   │  ₺   │      │   ╭────────╮╭────────╮   │ HOME │ LEFT │ DOWN │ RGHT │ END  │MPLY  │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤   │  PAUSE ││  PAUSE │   ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │  Ç   │      │      │   ╰────────╯╰────────╯   │C_NEXT│PGDOWN│      │VLDOWN│ VLUP │MUTE  │
        // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
        //                      │  ALT │LOWER │ SPACE  │                      │ SPACE  │RAISE │ WIN  │
        //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯
            label = "Space Right";            
            bindings = <
                &kp ESC      &trans    &trans     &kp RA(E)        &kp  RA(N2)     &kp LBKT                                      &kp C_PREV              &kp PG_UP   &kp UP                  &trans         &trans         &trans
                &trans       &kp EXCL  &kp RA(Q)  &kp SEMI         &kp  RA(T)      &trans                                        &kp HOME                &kp LEFT    &kp DOWN                &kp RIGHT      &kp END        &kp C_PLAY_PAUSE
                &trans       &trans    &trans     &ht LSHFT  DOT   &trans          &trans                                        &kp C_NEXT              &kp PG_DN   &none                   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_MUTE
                                       &kp LALT  &lt _LOWER TAB    &lt _SPACE_LEFT SPACE         &kp C_PLAY_PAUSE  &kp C_MUTE       &lt _SPACE_RIGHT SPACE          &mo _RAISE     &kp RIGHT_GUI
                >;
        };

        space_left_layer {
        // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
        // │      │      │      │      │      │      │                          │      │      │  Ü   │      │  :   │ DEL  │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤                          ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │      │      │   ╭────────╮╭────────╮   │      │      │      │  I   │  Ö   │   `  │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤   │RGB_TOG ││ EP_TOG │   ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │      │      │   ╰────────╯╰────────╯   │      │      │  ^   │  ~   │  ?   │ ENT  │
        // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
        //                      │  ALT │LOWER │ SPACE  │                      │ SPACE  │RAISE │ WIN  │
        //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯
            label = "Space Left";            
            bindings = <
                &trans       &trans    &trans     &trans         &trans             &trans                     &trans          &trans      &kp RBKT            &trans         &kp LS(SLASH)   &kp DEL
                &trans       &trans    &trans     &trans         &trans             &trans                     &trans          &trans      &trans              &tr_i          &kp COMMA       &kp RA(NON_US_HASH)
                &trans       &trans    &trans     &trans         &trans             &trans                     &trans          &trans      &ht RSHFT RS(N3)    &kp RA(RBKT)   &kp UNDER       &trans
                                       &kp LALT  &lt _LOWER TAB    &lt _SPACE_LEFT SPACE       &rgb_ug RGB_TOG  &ext_power EP_TOG     &lt _SPACE_RIGHT SPACE          &mo _RAISE     &kp RIGHT_GUI
            >;
            sensor-bindings = <&rgb_encoder_left &rgb_encoder_right>;
        };

        navigation_layer {
        // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
        // │ ESC  │      │      │      │      │      │                          │C_PREV│ PGUP │  UP  │      │      │      │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤                          ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │NAV T │      │   ╭────────╮╭────────╮   │ HOME │ LEFT │ DOWN │ RGHT │ END  │MPLY  │
        // ├──────┼──────┼──────┼──────┼──────┼──────┤   │  PAUSE ││  PAUSE │   ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │      │      │   ╰────────╯╰────────╯   │C_NEXT│PGDOWN│      │VLDOWN│ VLUP │MUTE  │
        // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
        //                      │  ALT │LOWER │ SPACE  │                      │ SPACE  │RAISE │ WIN  │
        //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯   
            label = "Navigation";     
            bindings = <
                &kp ESC      &trans    &trans     &trans           &trans       &trans       &kp C_PREV              &kp PG_UP   &kp UP                  &trans         &trans         &trans
                &trans       &trans    &trans     &trans           &trans       &trans       &kp HOME                &kp LEFT    &kp DOWN                &kp RIGHT      &kp END        &kp C_PLAY_PAUSE
                &trans       &trans    &trans     &trans           &trans       &trans       &kp C_NEXT              &kp PG_DN   &none                   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_MUTE
                                       &kp LALT  &lt _LOWER TAB    &lt _SPACE_LEFT SPACE         &kp C_PLAY_PAUSE  &kp C_MUTE       &lt _SPACE_RIGHT SPACE          &mo _RAISE     &kp RIGHT_GUI
            >;
        };

        adjust_layer {
        // ╭──────┬──────┬──────┬──────┬──────┬──────╮                          ╭──────┬──────┬──────┬──────┬──────┬──────╮
        // │ BRI+ │ SAT+ │ HUE+ │ ANI+ │      │ TOG  │                          │  BT1 │ BT2  │ BT3  │ BT4  │ BT5  │BT_CLR│
        // ├──────┼──────┼──────┼──────┼──────┼──────┤                          ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │ BRI- │ SAT- │ HUE- │ ANI- │      │      │   ╭────────╮╭────────╮   │      │      │      │EP_ON │EP_OFF│EP_TOG│
        // ├──────┼──────┼──────┼──────┼──────┼──────┤   │  PAUSE ││  PAUSE │   ├──────┼──────┼──────┼──────┼──────┼──────┤
        // │      │      │      │      │      │      │   ╰────────╯╰────────╯   │RESET │ BOOT │      │O_USB │O_BLE │OUTTOG│
        // ╰──────┴──────┴──────┼──────┼──────┼──────┴─╮                      ╭─┴──────┼──────┼──────┼──────┴──────┴──────╯
        //                      │  ALT │LOWER │ SPACE  │                      │ SPACE  │RAISE │ WIN  │
        //                      ╰──────┴──────┴────────╯                      ╰────────┴──────┴──────╯    
            label = "Adjust";        
            bindings = <
                &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG              &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3       &bt BT_SEL 4        &bt BT_CLR
                &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none                        &none        &none         &none        &ext_power EP_ON   &ext_power EP_OFF   &ext_power EP_TOG
                &none           &none           &none           &none           &none &none                        &sys_reset   &bootloader   &none        &out OUT_USB       &out OUT_BLE        &out OUT_TOG
                                                &none           &none           &none         &none      &none     &none        &none        &none
            >;
        };
    };
};






